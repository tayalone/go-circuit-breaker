version: "3.9"

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "9411:9411"
      - "16686:16686"
      - "14268:14268"
    networks:
      - cb
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - cb
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus
    networks:
      - cb
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
      - ./resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 9200:9200
    networks:
      - cb
  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    volumes:
      - ./resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - cb
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.1
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./resources/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./red/logs/:/logs/
    networks:
      - cb
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 50
    ports:
      - 5601:5601
    networks:
      - cb
  red:
    image: cosmtrek/air
    working_dir: /project
    volumes:
      - ./red:/project/
    ports:
      - "3001:8081"
    environment:
      - PORT=8081
      - JEAGER_ENDPOINT=http://jaeger:14268/api/traces
      - SERVICE_NAME=red
      - ENVIROMENT=develop
    depends_on:
      - jaeger
      - prometheus
      - grafana
    networks:
      - cb
  green:
    image: cosmtrek/air
    working_dir: /project
    volumes:
      - ./green:/project/
    ports:
      - "3002:8081"
    environment:
      - PORT=8081
      - JEAGER_ENDPOINT=http://jaeger:14268/api/traces
      - SERVICE_NAME=green
      - ENVIROMENT=develop
    networks:
      - cb
    depends_on:
      - red
      - jaeger
networks:
  cb:
    driver: bridge
volumes:
  prometheus_data: {}
